// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  username      String          @unique
  email         String          @unique
  password      String?         // Optional for Firebase users
  name          String?
  avatarUrl     String?
  isFirebaseUser Boolean        @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  transcriptions Transcription[]

  @@map("users")
}

model Transcription {
  id                  String   @id @default(cuid())
  userId              String
  fileName            String
  fileSize            Int?
  fileType            String?
  durationSeconds     Int?
  status              String   @default("processing") // processing, completed, failed
  transcriptionOutput Json?    // Store the full transcription result
  metadata            Json?    // Store additional info like language, model used, etc.
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("transcriptions")
}
